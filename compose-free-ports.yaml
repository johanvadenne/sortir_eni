services:
  # Base de donnÃ©es MySQL
  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-sortir}
      MYSQL_USER: ${MYSQL_USER:-sortir_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-sortir_password}
    ports:
      - "3307:3306"  # Port externe 3307, port interne 3306
    volumes:
      - database_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}" ]
      timeout: 5s
      retries: 10
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # Application Symfony
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    ports:
      - "8001:8000"  # Port externe 8001, port interne 8000
    volumes:
      - .:/var/www/html
      - ./var:/var/www/html/var
    environment:
      - APP_ENV=${APP_ENV:-prod}
      - DATABASE_URL=mysql://${MYSQL_USER:-sortir_user}:${MYSQL_PASSWORD:-sortir_password}@database:3306/${MYSQL_DATABASE:-sortir}?serverVersion=8.0
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "
        composer install --no-dev --optimize-autoloader &&
        php bin/console doctrine:database:create --if-not-exists &&
        php bin/console doctrine:migrations:migrate --no-interaction &&
        php bin/console doctrine:fixtures:load --group=etat --no-interaction &&
        php bin/console cache:clear --env=prod &&
        php -S 0.0.0.0:8000 -t public
      "

  # Nginx (optionnel pour la production)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"    # Port externe 8080, port interne 80
      - "8443:443"   # Port externe 8443, port interne 443
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/html/public
    depends_on:
      - app
    profiles:
      - production

volumes:
  database_data:
